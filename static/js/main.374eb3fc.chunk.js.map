{"version":3,"sources":["assets/profile-image.png","components/tooltip/tooltip.component.tsx","components/logo/logo.component.tsx","components/header-icon/header-icon.component.tsx","components/header-icon-styled/header-icon-styled.component.tsx","sections/header/header.component.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","customWidth","maxWidth","ToolTipComponent","children","text","placement","TransitionComponent","color","classes","Tooltip","className","tooltip","title","arrow","interactive","LogoComponent","src","alt","draggable","Zoom","HeaderIconComponent","component","style","HeaderIconStyledComponent","href","Icon","AboutSection","ProfileImg","EqualizerIcon","LocalMallIcon","SpeakerNotesIcon","ContactSupportIcon","id","target","App","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.374eb3fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile-image.76ced137.png\";","import React from \"react\";\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport { ITooltipComponent } from \"../../types/cv\";\n\nconst useStyles = makeStyles((theme) => ({\n  customWidth: {\n    maxWidth: 150,\n  },\n}));\n\nconst ToolTipComponent: React.FC<ITooltipComponent> = ({\n  children,\n  text,\n  placement,\n  TransitionComponent,\n  color,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Tooltip\n      className={`tooltip-interactive-arrow`}\n      classes={{ tooltip: classes.customWidth }}\n      title={text}\n      arrow\n      interactive\n      TransitionComponent={TransitionComponent}\n      placement={placement}\n      color={color}\n    >\n      {children}\n    </Tooltip>\n  );\n};\n\nexport default ToolTipComponent;\n","import { Zoom } from \"@material-ui/core\";\nimport { IProfileImage } from \"../../types/cv\";\nimport ToolTipComponent from \"../tooltip/tooltip.component\";\nimport \"./logo.styles.css\";\n\nconst LogoComponent: React.FC<IProfileImage> = ({\n  src,\n  alt,\n  draggable,\n  color,\n}) => {\n  return (\n    <ToolTipComponent\n      color={color}\n      TransitionComponent={Zoom}\n      placement=\"right\"\n      text=\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Front-End Developer &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Name: Farasat Ali &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Age: 18\"\n    >\n      <img\n        src={src}\n        alt={alt}\n        className=\"cv-header__image-background\"\n        draggable={draggable}\n      />\n    </ToolTipComponent>\n  );\n};\n\nexport default LogoComponent;\n","import { Icon } from \"@material-ui/core\";\nimport { IHeaderIcon } from \"../../types/cv\";\n\nconst HeaderIconComponent: React.FC<IHeaderIcon> = ({\n  component,\n  color,\n  className,\n}) => {\n  return (\n    <div className={`cv-header__about-icon ${className}`}>\n      <Icon component={component} style={{ color: color }} />\n    </div>\n  );\n};\n\nexport default HeaderIconComponent;\n","import { IHeaderIconStyles } from \"../../types/cv\";\nimport HeaderIconComponent from \"../header-icon/header-icon.component\";\nimport \"./header-icon-styled.styles.css\";\n\nconst HeaderIconStyledComponent: React.FC<IHeaderIconStyles> = ({\n  href,\n  Icon,\n  color,\n  text,\n}) => {\n  return (\n    <div className=\"cv-header__about-icon__icon\">\n      <div className=\"cv-header__about-icon__position\">\n        <a href={href} className=\"cv-header__about-icon__styling\">\n          <HeaderIconComponent\n            className=\"cv-header__about-icon__styling-hover-visible\"\n            component={Icon}\n            color={color}\n          />\n          <HeaderIconComponent\n            className=\"cv-header__about-icon__styling-hover-hidden\"\n            component={Icon}\n            color={color}\n          />\n        </a>\n        <p\n          style={{ color: color }}\n          className=\"cv-header__about-icon__styling-hover-hidden__text\"\n        >\n          {text}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderIconStyledComponent;\n","import \"./header.styles.css\";\nimport ProfileImg from \"../../assets/profile-image.png\";\nimport LogoComponent from \"../../components/logo/logo.component\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport SpeakerNotesIcon from \"@material-ui/icons/SpeakerNotes\";\nimport ContactSupportIcon from \"@material-ui/icons/ContactSupport\";\nimport HeaderIconStyledComponent from \"../../components/header-icon-styled/header-icon-styled.component\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\n\nexport default function AboutSection() {\n  return (\n    <div className=\"cv-header\">\n      <div className=\"cv-header__image\">\n        <LogoComponent\n          src={ProfileImg}\n          alt={\"Profile - Farasat Ali\"}\n          draggable={\"false\"}\n        />\n      </div>\n\n      <div className=\"cv-header__icons\">\n        <hr />\n        <HeaderIconStyledComponent\n          href={\"java\"}\n          Icon={EqualizerIcon}\n          color={\"rgba(255, 0, 0, 0.65)\"}\n          text={\"About\"}\n        />\n        <hr />\n        <HeaderIconStyledComponent\n          href={\"java\"}\n          Icon={LocalMallIcon}\n          color={\"rgba(0, 81, 255, 0.65)\"}\n          text={\"Portfolio\"}\n        />\n        <hr />\n        <HeaderIconStyledComponent\n          href={\"java\"}\n          Icon={SpeakerNotesIcon}\n          color={\"rgba(255, 123, 0, 0.65)\"}\n          text={\"Testimonial\"}\n        />\n        <hr />\n        <HeaderIconStyledComponent\n          href={\"java\"}\n          Icon={ContactSupportIcon}\n          color={\"rgba(0, 255, 34, 0.65)\"}\n          text={\"Contact\"}\n        />\n        <hr />\n      </div>\n\n      <div className=\"cv-header__social\">\n        <div className=\"cv-header__social-text\">\n          <p>Follow Us</p>\n        </div>\n      </div>\n      <div className=\"cv-header__social-icons\">\n        <a\n          id=\"cv-header__social-icons__facebook\"\n          href=\"https://facebook.com/FarasatAliAzeemi/\"\n          target=\"_new\"\n        >\n          <FacebookIcon />\n        </a>\n        <a\n          id=\"cv-header__social-icons__linked-in\"\n          href=\"https://www.linkedin.com/in/faraasat/\"\n          target=\"_new\"\n        >\n          <LinkedInIcon />\n        </a>\n        <br />\n        <a\n          id=\"cv-header__social-icons__instagram\"\n          href=\"https://www.instagram.com/farasat_ali_azeemi/\"\n          target=\"_new\"\n        >\n          <InstagramIcon />\n        </a>\n        <a\n          id=\"cv-header__social-icons__github\"\n          href=\"https://github.com/faraasat\"\n          target=\"_new\"\n        >\n          <GitHubIcon />\n        </a>\n        <br />\n        <a\n          id=\"cv-header__social-icons__telegram\"\n          href=\"https://t.me/farasat_azeemi/\"\n          target=\"_new\"\n        >\n          <TelegramIcon />\n        </a>\n        <a\n          id=\"cv-header__social-icons__whatsApp\"\n          href=\"https://wa.link/7xeqob\"\n          target=\"_new\"\n        >\n          <WhatsAppIcon />\n        </a>\n        <br />\n        <a id=\"cv-header__social-icons__twitter\" href=\"#!\" target=\"_new\">\n          <TwitterIcon />\n        </a>\n      </div>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport { Header } from \"./listing\";\n\nfunction App() {\n  return (\n    <div>\n      <div className='cv-app-header-alignment'>\n        <Header />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.unregister();\nreportWebVitals();\n"],"sourceRoot":""}